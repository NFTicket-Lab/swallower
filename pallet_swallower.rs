
//! Autogenerated weights for `pallet_swallower`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-12-16, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/node-swallower
// benchmark
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_swallower
// --extrinsic
// set_asset_id
// --steps
// 50
// --repeat
// 20
// --output
// ./


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_swallower`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_swallower::WeightInfo for WeightInfo<T> {
	// Storage: Swallower Admin (r:1 w:0)
	// Storage: Swallower AssetId (r:0 w:1)
	fn set_asset_id(s: u32, ) -> Weight {
		(23_789_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((1_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
